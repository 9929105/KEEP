// Generated by CoffeeScript 1.6.1

define(['jquery', 'vendor/underscore'], function($, _) {
  var render_charts;
  render_charts = function() {
    var end, line, max, min, model, option, parseDate, start, value, x, xAxis, y, yAxis, yaxis_tmpl, _i, _j, _len, _len1, _ref, _ref1,
      _this = this;
    d3.select('svg').remove();
    $('#yaxis_options').html('');
    yaxis_tmpl = _.template($('#yaxis_tmpl').html());
    _ref = this.chart_fields;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      option = _ref[_i];
      $('#yaxis_options').append(yaxis_tmpl({
        label: option,
        value: option,
        checked: this.yaxis === option ? 'checked' : ''
      }));
    }
    parseDate = d3.time.format('%Y-%m-%dT%H:%M:%S').parse;
    start = parseDate(this.data.models[0].get('timestamp'));
    end = parseDate(this.data.models[this.data.length - 1].get('timestamp'));
    min = null;
    max = null;
    _ref1 = this.data.models;
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      model = _ref1[_j];
      value = parseFloat(model.get('data')[this.yaxis]);
      if (!min || value < min) {
        min = value;
      }
      if (!max || value > max) {
        max = value;
      }
    }
    x = d3.time.scale().domain([start, end]).range([0, 800]);
    y = d3.scale.linear().domain([min, max]).range([200, 0]);
    xAxis = d3.svg.axis().scale(x).orient('bottom');
    yAxis = d3.svg.axis().scale(y).orient('left');
    line = d3.svg.line().x(function(d) {
      return x(parseDate(d.get('timestamp')));
    }).y(function(d) {
      return y(parseFloat(d.get('data')[_this.yaxis]));
    });
    this.svg = d3.select('#line').append('svg').attr('width', this.width).attr('height', this.height).append('g').attr('transform', 'translate( 32, 16 )');
    this.svg.append('g').attr('class', 'x axis').attr('transform', 'translate( 0, 200 )').call(xAxis);
    this.svg.append("g").attr("class", "y axis").call(yAxis);
    this.svg.append('path').datum(this.data.models).attr('class', 'line').attr('d', line);
    return this;
  };
  return render_charts;
});
