// Generated by CoffeeScript 1.6.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

$(function() {
  var DataCollection, DataModel, DataView, VizApp;
  DataModel = (function(_super) {

    __extends(DataModel, _super);

    function DataModel() {
      return DataModel.__super__.constructor.apply(this, arguments);
    }

    DataModel.prototype.defaults = {
      data: []
    };

    return DataModel;

  })(Backbone.Model);
  DataCollection = (function(_super) {

    __extends(DataCollection, _super);

    function DataCollection() {
      return DataCollection.__super__.constructor.apply(this, arguments);
    }

    DataCollection.prototype.model = DataModel;

    DataCollection.prototype.initialize = function() {
      this.form_id = $('#form_id').html();
      return this.url = '/api/v1/data/' + this.form_id + '/?format=json';
    };

    DataCollection.prototype.comparator = function(data) {
      return data.get('timestamp');
    };

    return DataCollection;

  })(Backbone.Collection);
  DataView = (function(_super) {

    __extends(DataView, _super);

    function DataView() {
      return DataView.__super__.constructor.apply(this, arguments);
    }

    DataView.prototype.el = $('#viz');

    DataView.prototype.data = new DataCollection();

    DataView.prototype.initialize = function() {
      this.listenTo(this.data, 'sync', this.render);
      this.data.fetch();
      this.svg = d3.select('#viz').append('svg').attr('width', 850).attr('height', 250).append('g').attr('transform', 'translate( 32, 16 )');
      return this;
    };

    DataView.prototype.render = function() {
      var end, line, parseDate, start, x, xAxis, y, yAxis,
        _this = this;
      console.log(this.data);
      parseDate = d3.time.format('%Y-%m-%dT%H:%M:%S').parse;
      start = parseDate(this.data.models[0].get('timestamp'));
      end = parseDate(this.data.models[this.data.length - 1].get('timestamp'));
      x = d3.time.scale().domain([start, end]).range([0, 800]);
      y = d3.scale.linear().domain([20.0, 140.0]).range([200, 0]);
      xAxis = d3.svg.axis().scale(x).orient('bottom');
      yAxis = d3.svg.axis().scale(y).orient('left');
      line = d3.svg.line().x(function(d) {
        return x(parseDate(d.get('timestamp')));
      }).y(function(d) {
        return y(parseFloat(d.get('data')['heart_rate']));
      });
      this.svg.append('g').attr('class', 'x axis').attr('transform', 'translate( 0, 200 )').call(xAxis);
      this.svg.append("g").attr("class", "y axis").call(yAxis);
      this.svg.append('path').datum(this.data.models).attr('class', 'line').attr('d', line);
      return this;
    };

    return DataView;

  })(Backbone.View);
  return VizApp = new DataView();
});
